{"version":3,"sources":["imgs/Kappa.jpg","components/Advertisment/List.js","components/Advertisment/Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","List","handleOnDeleteCard","event","_this","props","updateDataWithDeletedItem","_this2","this","titles","data","titlesArray","map","title","index","react_default","a","createElement","key","concat","propfordeletingbyindex","descriptions","descriptionsArray","description","names","namesArray","name","phoneNumbers","phoneNumbersArray","phoneNumber","className","cities","cityArray","city","images","imagesArray","image","alt","src","renderArrayOfObjects","item","onClick","Component","Form","state","Kappa","handleTitleChange","setState","target","value","handleDescriptionChange","handleNameChange","handlePhoneNumberChange","handleCityChange","imageSelectedHandler","getBase64","files","then","base64","onSubmitHandle","preventDefault","updateDataWithNewItem","onSubmit","style","marginTop","type","maxLength","onChange","onBlur","onBlurSubTitleChange","onFocus","onFocusSubTitleChange","autoFocus","required","id","react_input_mask_default","mask","placeholder","position","accept","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","error","readAsDataURL","App","previousState","Object","toConsumableArray","filter","localStorage","getItem","JSON","parse","setItem","stringify","width","margin","Advertisment_Form","Advertisment_List","updateDataWithEditedItem","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3eff373.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Kappa.205689f2.jpg\";","import React, { Component } from \"react\";\r\n\r\nclass List extends Component {\r\n  handleOnDeleteCard = event => {\r\n    this.props.updateDataWithDeletedItem(event);\r\n  };\r\n\r\n  render() {\r\n    const titles = this.props.data.titlesArray.map((title, index) => (\r\n      <div\r\n        key={`title-${index}`}\r\n        propfordeletingbyindex={index}\r\n      >\r\n        {title}\r\n      </div>\r\n    ));\r\n\r\n    const descriptions = this.props.data.descriptionsArray.map(\r\n      (description, index) => (\r\n        <div key={`description-${index}`} propfordeletingbyindex={index}>\r\n          {description}\r\n        </div>\r\n      )\r\n    );\r\n\r\n    const names = this.props.data.namesArray.map(\r\n      (name, index) => (\r\n        <div key={`name-${index}`} propfordeletingbyindex={index}>\r\n          {name}\r\n        </div>\r\n      )\r\n    );\r\n\r\n    const phoneNumbers = this.props.data.phoneNumbersArray.map(\r\n      (phoneNumber, index) => (\r\n        <div\r\n          key={`phoneNumber-${index}`}\r\n          propfordeletingbyindex={index}\r\n          className=\"phoneNumber\"\r\n        >\r\n          {phoneNumber}\r\n        </div>\r\n      )\r\n    );\r\n\r\n    const cities = this.props.data.cityArray.map((city, index) => (\r\n      <div\r\n        propfordeletingbyindex={index}\r\n        key={`city-${index}`}\r\n        className=\"city\"\r\n      >\r\n        {city}\r\n      </div>\r\n    ));\r\n\r\n    const images = this.props.data.imagesArray.map((image, index) => (\r\n      <div><img\r\n        alt=\"person\"\r\n        key={`image-${index}`}\r\n        propfordeletingbyindex={index}\r\n        className=\"image-in-card\"\r\n        src={image}\r\n      /></div>\r\n    ));\r\n\r\n    const toArrayOfObjects = titles.map((item, index) => ({\r\n      titles: titles[index],\r\n      descriptions: descriptions[index],\r\n      names: names[index],\r\n      phoneNumbers: phoneNumbers[index],\r\n      cities: cities[index],\r\n      images: images[index]\r\n    }));\r\n\r\n    const renderArrayOfObjects = toArrayOfObjects.map((item, key) => (\r\n     <div className={'objects'}key={`item-in-array-of-object-${key}`}>\r\n        <div className={'title'}>{item.titles}</div>\r\n        <div className={'description'}>{item.descriptions}</div>\r\n        <div className={'description'}>{item.names}</div>\r\n        <div className={'image'}>{item.images}</div>\r\n        <div >{item.cities}</div>\r\n        <div >{item.phoneNumbers}</div>\r\n        <div className={'delete'} onClick={() => this.handleOnDeleteCard(item)}>Удалить</div>\r\n        <div className={'edit'} >Редактировать</div>\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div className={'root-title'}>Объявление\r\n        {renderArrayOfObjects}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;","import React, { Component } from 'react';\r\nimport InputMask from 'react-input-mask';\r\nimport Kappa from \"../../imgs/Kappa.jpg\"\r\n\r\nclass Form extends Component {\r\n    state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      name: \"\",\r\n      phoneNumber: \"\",\r\n      city: \"Gotham City\",\r\n      image: Kappa\r\n    };\r\n\r\n  handleTitleChange = event => {\r\n    this.setState({ title: event.target.value });\r\n  };    \r\n   \r\n  handleDescriptionChange = event => {\r\n    this.setState({ description: event.target.value });\r\n  };\r\n\r\n  handleNameChange = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n  \r\n  handlePhoneNumberChange = event => {\r\n    this.setState({ phoneNumber: event.target.value });\r\n  };\r\n\r\n  handleCityChange = event => {\r\n    this.setState({ city: event.target.value });\r\n  };\r\n\r\n  imageSelectedHandler = event => {\r\n    getBase64(event.target.files[0]).then(base64 => {\r\n      this.setState({ image: base64 });\r\n    });\r\n  };\r\n\r\n  onSubmitHandle = event => {\r\n    event.preventDefault();\r\n    event.target.value = null;\r\n    this.setState({\r\n      title: \"\",\r\n      description: \"\",\r\n      name: \"\",\r\n      phoneNumber: \"\",\r\n      city: \"Gotham City\"\r\n    });\r\n    this.props.updateDataWithNewItem(this.state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <form onSubmit={this.onSubmitHandle}>\r\n          <div className={'input-sub-title'}>\r\n            <div style={{marginTop: '24px'}}>Заголовок</div>\r\n            <input type='text' className='sub-title' value={this.state.title}\r\n                    maxLength={140}  \r\n                    onChange={this.handleTitleChange}\r\n                    onBlur={this.onBlurSubTitleChange}\r\n                    onFocus={this.onFocusSubTitleChange}\r\n                    autoFocus\r\n                    required\r\n                    />\r\n              <div id={'sub-title-decrip-info'}>\r\n                <div>Обзятельное поле</div>\r\n                <div>Не более 140 символов</div>\r\n              </div>     \r\n          </div>\r\n          \r\n          <div className={'input-sub-title'}>\r\n            <div style={{marginTop: '29px'}}>Текст объявления</div>\r\n            <textarea className='text-area'  style={{marginTop: '8px'}} value={this.state.description}\r\n              maxLength={300} onChange={this.handleDescriptionChange}/>\r\n            <div id={'text-area-decrip'}>\r\n              <div>Не более 300 символов</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={'input-sub-title'}>\r\n            <div style={{marginTop: '29px'}}>Ваше имя</div>\r\n            <input type='text' className='sub-title' value={this.state.name}\r\n                   maxLength={50}  \r\n                   onChange={this.handleNameChange}\r\n                   autoFocus/>\r\n            <div id={'text-area-decrip'}>\r\n              <div>Не более 50 символов</div>\r\n            </div>\r\n          </div>\r\n  \r\n          <div className={'input-sub-title'}>\r\n            \r\n          <div style={{marginTop: '29px'}}>Номер телефона:</div>\r\n                <InputMask\r\n                  value={this.state.phoneNumber}\r\n                  onChange={this.handlePhoneNumberChange}\r\n                  id=\"phone-number-field\"\r\n                  mask=\"+7 (999) 999-99-99\"\r\n                  placeholder=\"+7 (___) ___-__-__\"\r\n                  required\r\n                  title=\"Введи номер телефона полностью в формате РФ\"\r\n                />\r\n              \r\n            </div>\r\n            <div className={'input-sub-title'}>\r\n                <div style={{marginTop: '28px'}}>Город</div>\r\n                <select value={this.state.city} onChange={this.handleCityChange} id=\"city-select\">\r\n                  <option value=\"Gotham City\">Gotham City</option>\r\n                  <option value=\"Metropolis\">Metropolis</option>\r\n                  <option value=\"Smallville\">Smallville</option>\r\n                  <option value=\"Star City\">Star City</option>\r\n                  <option value=\"Central City\">Central City</option>\r\n                  <option value=\"Raccoon City\">Raccoon City</option>\r\n                  <option value=\"Megaton\">Megaton</option>\r\n                  <option value=\"New Reno\">New Reno</option>\r\n                  <option value=\"Diamond City\">Diamond City</option>\r\n                  <option value=\"Vice City\">Vice City</option>\r\n                  <option value=\"Liberty City\">Liberty City</option>\r\n                  <option value=\"San-Andreas\">San-Andreas</option>\r\n                </select>\r\n            </div>\r\n            <div className={'fake-input'}>\r\n                <div style={{marginTop: '32px', position:'relative'}}>\r\n                    <div className={'fake-input-div'}>Прикрепить фото</div></div>\r\n            \r\n                <input\r\n                  onChange={this.imageSelectedHandler}\r\n                  id=\"imageFile\"\r\n                  type=\"file\"\r\n                  name=\"imageFile\"\r\n                  accept=\"image/*\"\r\n                />\r\n         </div>\r\n  \r\n            <button type=\"submit\" value=\"submit\" style={{marginTop: '32px'}}>\r\n              Отправить\r\n            </button>\r\n          \r\n        </form>\r\n      );\r\n  }\r\n}\r\n\r\nconst getBase64 = file => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n      reader.readAsDataURL(file);\r\n    });\r\n};\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\nimport List from \"./components//Advertisment/List\";\nimport Form from \"./components/Advertisment/Form\";\n\nclass App extends Component {\n  state = {\n    titlesArray: [],\n    descriptionsArray: [\n      \n    ],\n    namesArray: [],\n    phoneNumbersArray: [],\n    cityArray: [],\n    imagesArray: []\n  };\n\n  componentDidMount() {\n    localStorage.getItem(\"advertisment-localStorage\") &&\n      this.setState(\n        JSON.parse(localStorage.getItem(\"advertisment-localStorage\"))\n      );\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      \"advertisment-localStorage\",\n      JSON.stringify(this.state)\n    );\n  }\n\n  updateDataWithNewItem = value => {\n    this.setState(previousState => ({\n      titlesArray: [value.title, ...previousState.titlesArray ],\n      descriptionsArray: [\n        value.description,\n        ...previousState.descriptionsArray\n      ],\n      namesArray: [\n        value.name,\n        ...previousState.namesArray\n      ],\n      phoneNumbersArray: [\n        value.phoneNumber,\n        ...previousState.phoneNumbersArray\n      ],\n      cityArray: [value.city, ...previousState.cityArray],\n      imagesArray: [value.image, ...previousState.imagesArray]\n    }));\n  };\n\n  updateDataWithDeletedItem = value => {\n    this.setState({\n      titlesArray: this.state.titlesArray.filter(\n        (item, index) => index !== value.titles.props.propfordeletingbyindex\n      ),\n      descriptionsArray: this.state.descriptionsArray.filter(\n        (item, index) =>\n          index !== value.descriptions.props.propfordeletingbyindex\n      ),\n      namesArray: this.state.namesArray.filter(\n        (item, index) =>\n          index !== value.names.props.propfordeletingbyindex\n      ),\n      phoneNumbersArray: this.state.phoneNumbersArray.filter(\n        (item, index) =>\n          index !== value.phoneNumbers.props.propfordeletingbyindex\n      ),\n      cityArray: this.state.cityArray.filter(\n        (item, index) => index !== value.cities.props.propfordeletingbyindex\n      ),\n      imagesArray: this.state.imagesArray.filter(\n        (item, index) => index !== value.images.props.propfordeletingbyindex\n      )\n    });\n  };\n\n  render() {\n    return (\n      <div style={{width:614, margin: '48px auto'}}>\n        <div className=\"root-title\">Подать объявление</div>\n        <Form updateDataWithNewItem={this.updateDataWithNewItem} />\n        <List\n          updateDataWithDeletedItem={this.updateDataWithDeletedItem}\n          updateDataWithEditedItem={this.updateDataWithEditedItem}\n          data={this.state}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}